
macro(add_files_by_extension target_var extensions)
  set(directories ${ARGN})
  if(NOT DEFINED ENV{extensions})
    string(REGEX MATCH "^.*;.*;.*$" IS_LIST_STRING "${extensions}")
    if(NOT IS_LIST_STRING)
      string(REPLACE ";" " " extensions "${extensions}")
      string(REGEX REPLACE "([^\ ]+)" "\\1;" extensions "${extensions}")
    endif()
  endif()

  set(${target_var} "" PARENT_SCOPE)

  foreach(dir ${directories})
    foreach(ext ${extensions})
      set(glob_pattern "${dir}/*${ext}")
      file(GLOB_RECURSE temp_files ${glob_pattern})
      list(APPEND ${target_var} ${temp_files})
    endforeach()
  endforeach()

  set(${target_var} "${${target_var}}" PARENT_SCOPE)
endmacro()

function(make_files_relative OUT_VAR BASE_DIR)
  set(_result)
  foreach(_abs IN LISTS ARGN)
    file(RELATIVE_PATH _rel "${BASE_DIR}" "${_abs}")
    list(APPEND _result "${_rel}")
  endforeach()
  set(${OUT_VAR} "${_result}" PARENT_SCOPE)
endfunction()

macro(add_source_group files base_dir group_prefix)
  foreach(file IN LISTS ${files})
    file(RELATIVE_PATH rel_path "${base_dir}" "${file}")
    get_filename_component(group_path "${rel_path}" DIRECTORY)
    if(group_path STREQUAL "")
      # set(group_path "${group_prefix}")
      source_group("${group_prefix}" FILES "${file}")
    else()
      source_group("${group_prefix}\\${group_path}" FILES "${file}")
    endif()
  endforeach()
endmacro()